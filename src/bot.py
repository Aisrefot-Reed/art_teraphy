"""
Telegram Bot Process for Art Therapist
This bot receives photos from users, analyzes emotions, and provides art therapy recommendations.
"""

import asyncio
import logging
import os
import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, BufferedInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
from dotenv import load_dotenv
import requests
import json

# Load environment variables
load_dotenv()

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Bot configuration
BOT_TOKEN = os.getenv('BOT_TOKEN')
ML_API_URL = os.getenv('ML_API_URL', 'http://localhost:8001')
LLM_API_URL = os.getenv('LLM_API_URL')
LLM_API_KEY = os.getenv('LLM_API_KEY')

if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN environment variable is required")

# Initialize bot and dispatcher
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# Art therapy recommendations based on emotions
EMOTION_PROMPTS = {
    'angry': """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –≥–Ω–µ–≤. –ü—Ä–µ–¥–ª–æ–∂–∏ –µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–Ω–µ–≤–æ–º. 
    –í–∫–ª—é—á–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö —Ñ–æ—Ä–º, —Ä–∞–±–æ—Ç—É —Å –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–ª–∞–∂–µ–π –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–π. 
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º, –ø–æ–Ω–∏–º–∞—é—â–∏–º –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 150-200 —Å–ª–æ–≤.""",
    
    'disgust': """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∏–ª–∏ –Ω–µ–ø—Ä–∏—è—Ç–∏–µ. –ü—Ä–µ–¥–ª–æ–∂–∏ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç—Ç–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏.
    –í–∫–ª—é—á–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤, —Ä–∞–±–æ—Ç—É —Å —Ç–µ–∫—Å—Ç—É—Ä–∞–º–∏, —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—â–∏—Ç–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–µ–ª–∏–∫–∞—Ç–Ω—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 150-200 —Å–ª–æ–≤.""",
    
    'fear': """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞—Ö –∏–ª–∏ —Ç—Ä–µ–≤–æ–≥—É. –ü—Ä–µ–¥–ª–æ–∂–∏ —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏.
    –í–∫–ª—é—á–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –º–∞–Ω–¥–∞–ª, —Ä–∞–±–æ—Ç—É —Å –º—è–≥–∫–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏, —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∑–∞—â–∏—Ç—ã.
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â–∏–º –∏ –≤—Å–µ–ª—è—é—â–∏–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 150-200 —Å–ª–æ–≤.""",
    
    'happy': """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç —Ä–∞–¥–æ—Å—Ç—å! –ü—Ä–µ–¥–ª–æ–∂–∏ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö —ç–º–æ—Ü–∏–π.
    –í–∫–ª—é—á–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: —Å–æ–∑–¥–∞–Ω–∏–µ —è—Ä–∫–∏—Ö –∫–æ–ª–ª–∞–∂–µ–π, —Ä–∏—Å–æ–≤–∞–Ω–∏–µ —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤, —Ä–∞–±–æ—Ç—É —Å —Ç–µ–ø–ª—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏.
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–º. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 150-200 —Å–ª–æ–≤.""",
    
    'sad': """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –≥—Ä—É—Å—Ç—å. –ü—Ä–µ–¥–ª–æ–∂–∏ –º—è–≥–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—á–∞–ª—å—é.
    –í–∫–ª—é—á–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –¥–æ–∂–¥—è –∏ –µ–≥–æ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ä–∞–¥—É–≥—É, —Ä–∞–±–æ—Ç—É —Å —Å–∏–Ω–∏–º–∏ –æ—Ç—Ç–µ–Ω–∫–∞–º–∏, —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—á—É–≤—Å—Ç–≤—É—é—â–∏–º –∏ –æ–±–Ω–∞–¥–µ–∂–∏–≤–∞—é—â–∏–º. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 150-200 —Å–ª–æ–≤.""",
    
    'surprise': """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç —É–¥–∏–≤–ª–µ–Ω–∏–µ. –ü—Ä–µ–¥–ª–æ–∂–∏ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —ç–º–æ—Ü–∏–π.
    –í–∫–ª—é—á–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö —Å–æ—á–µ—Ç–∞–Ω–∏–π.
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª—é–±–æ–ø—ã—Ç–Ω—ã–º –∏ –ø–æ–æ—â—Ä—è—é—â–∏–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 150-200 —Å–ª–æ–≤.""",
    
    'neutral': """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ü—Ä–µ–¥–ª–æ–∂–∏ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏ –¥–ª—è —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è.
    –í–∫–ª—é—á–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: —Å–≤–æ–±–æ–¥–Ω–æ–µ —Ä–∏—Å–æ–≤–∞–Ω–∏–µ, —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤, —Ä–∞–±–æ—Ç—É —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –º–∏—Ä–∞.
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º—è–≥–∫–æ –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏–º –∏ –ø–æ–æ—â—Ä—è—é—â–∏–º —Å–∞–º–æ–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 150-200 —Å–ª–æ–≤."""
}

async def call_llm_api(prompt: str) -> str:
    """
    Call LLM API to generate art therapy recommendations
    
    Args:
        prompt: The prompt for the LLM
        
    Returns:
        Generated recommendation text
    """
    if not LLM_API_URL or not LLM_API_KEY:
        # Fallback to predefined responses if no LLM API is configured
        return generate_fallback_response(prompt)
    
    try:
        async with aiohttp.ClientSession() as session:
            headers = {
                'Authorization': f'Bearer {LLM_API_KEY}',
                'Content-Type': 'application/json'
            }
            
            data = {
                'model': 'gpt-3.5-turbo',  # or another model
                'messages': [
                    {'role': 'system', 'content': '–¢—ã –æ–ø—ã—Ç–Ω—ã–π –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–µ–≤—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º —á–µ—Ä–µ–∑ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ.'},
                    {'role': 'user', 'content': prompt}
                ],
                'max_tokens': 300,
                'temperature': 0.7
            }
            
            async with session.post(LLM_API_URL, headers=headers, json=data) as response:
                if response.status == 200:
                    result = await response.json()
                    return result['choices'][0]['message']['content']
                else:
                    logger.error(f"LLM API error: {response.status}")
                    return generate_fallback_response(prompt)
                    
    except Exception as e:
        logger.error(f"Error calling LLM API: {e}")
        return generate_fallback_response(prompt)

def generate_fallback_response(prompt: str) -> str:
    """Generate fallback response when LLM API is not available"""
    if '–≥–Ω–µ–≤' in prompt.lower() or 'angry' in prompt.lower():
        return """–Ø –≤–∏–∂—É, —á—Ç–æ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Å–∏–ª—å–Ω—ã–µ —ç–º–æ—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É "–í—ã–ø–ª–µ—Å–∫ –≥–Ω–µ–≤–∞ –Ω–∞ –±—É–º–∞–≥–µ":

üé® –í–æ–∑—å–º–∏—Ç–µ –±–æ–ª—å—à–æ–π –ª–∏—Å—Ç –±—É–º–∞–≥–∏ –∏ —è—Ä–∫–∏–µ –∫—Ä–∞—Å–∫–∏ (–æ—Å–æ–±–µ–Ω–Ω–æ –∫—Ä–∞—Å–Ω—ã–π, –æ—Ä–∞–Ω–∂–µ–≤—ã–π)
‚úèÔ∏è –†–∏—Å—É–π—Ç–µ —Ä–µ–∑–∫–∏–º–∏, —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏ - –ª–∏–Ω–∏–∏, –ø—è—Ç–Ω–∞, –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã
üñåÔ∏è –ù–µ –¥—É–º–∞–π—Ç–µ –æ –∫—Ä–∞—Å–æ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ä–∞–∂–∞–π—Ç–µ —Å–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∏—Å—Ç–∏
‚ö° –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Ä–∏—Å—É–Ω–æ–∫ –∏ –ø–æ–¥—É–º–∞–π—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤ –≤–∞—à–∏—Ö –æ—â—É—â–µ–Ω–∏—è—Ö

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç—å –≥–Ω–µ–≤ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –≤ —Ç–≤–æ—Ä—á–µ—Å–∫—É—é —ç–Ω–µ—Ä–≥–∏—é."""

    elif '—Å—Ç—Ä–∞—Ö' in prompt.lower() or 'fear' in prompt.lower():
        return """–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–≤–æ–≥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â—É—é —Ç–µ—Ö–Ω–∏–∫—É "–ú–∞–Ω–¥–∞–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏":

üå∏ –ù–∞—Ä–∏—Å—É–π—Ç–µ –∫—Ä—É–≥ –≤ —Ü–µ–Ω—Ç—Ä–µ –ª–∏—Å—Ç–∞
üé® –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —É–∑–æ—Ä–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è –º—è–≥–∫–∏–µ —Ü–≤–µ—Ç–∞ (–≥–æ–ª—É–±–æ–π, –∑–µ–ª–µ–Ω—ã–π, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π)
‚ú® –î–æ–±–∞–≤—å—Ç–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –∞—Å—Å–æ—Ü–∏–∏—Ä—É—é—Ç—Å—è —É –≤–∞—Å —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –∏ –ø–æ–∫–æ–µ–º
üïØÔ∏è –†–∏—Å—É–π—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É—è—Å—å –Ω–∞ –¥—ã—Ö–∞–Ω–∏–∏

–≠—Ç–∞ —Ç–µ—Ö–Ω–∏–∫–∞ –ø–æ–º–æ–∂–µ—Ç —É—Å–ø–æ–∫–æ–∏—Ç—å —É–º –∏ —Å–æ–∑–¥–∞—Ç—å –æ—â—É—â–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏."""

    elif '–≥—Ä—É—Å—Ç—å' in prompt.lower() or 'sad' in prompt.lower():
        return """–Ø —á—É–≤—Å—Ç–≤—É—é –≤–∞—à—É –ø–µ—á–∞–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É "–û—Ç –¥–æ–∂–¥—è –∫ —Ä–∞–¥—É–≥–µ":

üíß –ù–∞—á–Ω–∏—Ç–µ —Å —Ä–∏—Å–æ–≤–∞–Ω–∏—è –¥–æ–∂–¥—è —Å–∏–Ω–∏–º–∏ –∏ —Å–µ—Ä—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
‚òÅÔ∏è –ò–∑–æ–±—Ä–∞–∑–∏—Ç–µ —Ç—É—á–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É—é—Ç –≤–∞—à–∏ –≥—Ä—É—Å—Ç–Ω—ã–µ –º—ã—Å–ª–∏
üåà –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –¥–æ–±–∞–≤—å—Ç–µ —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞, —Å–æ–∑–¥–∞–≤–∞—è —Ä–∞–¥—É–≥—É
‚òÄÔ∏è –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–æ–ª–Ω—Ü–µ–º, –ø—Ä–æ–±–∏–≤–∞—é—â–∏–º—Å—è —Å–∫–≤–æ–∑—å –æ–±–ª–∞–∫–∞

–≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–º–æ–∂–µ—Ç —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏ –ø—Ä–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –≥—Ä—É—Å—Ç—å –∫ –Ω–∞–¥–µ–∂–¥–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é."""

    else:
        return """–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ - —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É "–°–≤–æ–±–æ–¥–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ":

üé® –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç (–∫—Ä–∞—Å–∫–∏, –∫–∞—Ä–∞–Ω–¥–∞—à–∏, –ø–∞—Å—Ç–µ–ª—å)
‚ú® –ù–∞—á–Ω–∏—Ç–µ —Ä–∏—Å–æ–≤–∞—Ç—å –±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ü–µ–ª–∏, —Å–ª–µ–¥—É—è —Å–≤–æ–∏–º –∏–º–ø—É–ª—å—Å–∞–º
üåà –ü–æ–∑–≤–æ–ª—å—Ç–µ —Ü–≤–µ—Ç–∞–º –∏ —Ñ–æ—Ä–º–∞–º –ø–æ—è–≤–ª—è—Ç—å—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ
üí≠ –ù–µ —Å—É–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –ø—Ä–æ—Å—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å–æ–º

–ü–æ–º–Ω–∏—Ç–µ: –≤ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏ –≤–∞–∂–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å, –∞ –Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í–∞—à–∏ —ç–º–æ—Ü–∏–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ –Ω–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ."""

@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """Handle /start command"""
    welcome_text = """
üé® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç "–ê—Ä—Ç-–¢–µ—Ä–∞–ø–µ–≤—Ç"! 

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ —á–µ—Ä–µ–∑ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å–≤–æ–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞, –∫–∞—Ä—Ç–∏–Ω—ã –∏–ª–∏ –¥–∞–∂–µ —Å–µ–ª—Ñ–∏, –∏ —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–æ–∂—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏.

üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
‚ùì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
"""
    await message.answer(welcome_text)

@dp.message(Command("help"))
async def command_help_handler(message: Message) -> None:
    """Handle /help command"""
    help_text = """
üÜò –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é:
   ‚Ä¢ –í–∞—à —Ä–∏—Å—É–Ω–æ–∫ –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω—É
   ‚Ä¢ –°–µ–ª—Ñ–∏ (–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π –ø–æ –ª–∏—Ü—É)
   ‚Ä¢ –õ—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

2Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏

3Ô∏è‚É£ –°–ª–µ–¥—É–π—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–∏–∫–∞–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–º–æ—Ü–∏—è–º–∏

üé® –ê—Ä—Ç-—Ç–µ—Ä–∞–ø–∏—è –ø–æ–º–æ–≥–∞–µ—Ç:
   ‚Ä¢ –í—ã—Ä–∞–∑–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ —ç–º–æ—Ü–∏–∏
   ‚Ä¢ –°–Ω–∏–∑–∏—Ç—å —Å—Ç—Ä–µ—Å—Å –∏ —Ç—Ä–µ–≤–æ–≥—É
   ‚Ä¢ –õ—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è
   ‚Ä¢ –ù–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã

üí° –°–æ–≤–µ—Ç: –ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å –æ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∏—Å—É–Ω–∫–∞ - –≤–∞–∂–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å, –∞ –Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!
"""
    await message.answer(help_text)

@dp.message(lambda message: message.photo)
async def handle_photo(message: Message) -> None:
    """Handle photo messages"""
    try:
        # Send "typing" action
        await bot.send_chat_action(message.chat.id, "typing")
        
        # Get the largest photo
        photo = message.photo[-1]
        
        # Download photo
        file_info = await bot.get_file(photo.file_id)
        file_data = await bot.download_file(file_info.file_path)
        
        # Send photo to ML API for emotion analysis
        async with aiohttp.ClientSession() as session:
            data = aiohttp.FormData()
            data.add_field('file', file_data, filename='photo.jpg', content_type='image/jpeg')
            
            async with session.post(f"{ML_API_URL}/analyze_emotion", data=data) as response:
                if response.status == 200:
                    emotion_result = await response.json()
                    
                    if emotion_result['status'] == 'success':
                        dominant_emotion = emotion_result['dominant_emotion']
                        confidence = emotion_result['confidence']
                        
                        # Generate prompt for LLM
                        prompt = EMOTION_PROMPTS.get(dominant_emotion, EMOTION_PROMPTS['neutral'])
                        
                        # Get art therapy recommendation
                        recommendation = await call_llm_api(prompt)
                        
                        # Format response
                        response_text = f"""
üé≠ **–ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!**

üìä –î–æ–º–∏–Ω–∏—Ä—É—é—â–∞—è —ç–º–æ—Ü–∏—è: **{dominant_emotion.upper()}**
üìà –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2%}

üé® **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏:**

{recommendation}

üí° –ü–æ–º–Ω–∏—Ç–µ: —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ - —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ª—é–±—ã—Ö —ç–º–æ—Ü–∏–π!
"""
                        
                        await message.answer(response_text, parse_mode="Markdown")
                        
                    else:
                        # No face detected
                        await message.answer("""
üòä –Ø –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —ç–º–æ—Ü–∏–∏ –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏, –Ω–æ —ç—Ç–æ –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞!

üé® **–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏–∏:**

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É "–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ —Ä–∏—Å–æ–≤–∞–Ω–∏–µ":
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞—Å —Å–µ–π—á–∞—Å –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç
‚Ä¢ –†–∏—Å—É–π—Ç–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã, —Å–ª–µ–¥—É—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∏–º–ø—É–ª—å—Å–∞–º  
‚Ä¢ –ù–µ –¥—É–º–∞–π—Ç–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–µ
‚Ä¢ –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥—É–º–∞–π—Ç–µ, —á—Ç–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ

–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –ø–æ–º–æ–≥–∞–µ—Ç –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –¥–∞–∂–µ –±–µ–∑ –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π! üåà
""")
                else:
                    await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
                    
    except Exception as e:
        logger.error(f"Error processing photo: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@dp.message()
async def handle_other_messages(message: Message) -> None:
    """Handle other messages"""
    await message.answer("""
üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π!

–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:
‚Ä¢ –°–≤–æ–π —Ä–∏—Å—É–Ω–æ–∫ –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω—É
‚Ä¢ –°–µ–ª—Ñ–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π –ø–æ –ª–∏—Ü—É
‚Ä¢ –õ—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç—Ä–∞–∂–∞—é—â–µ–µ –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
""")

async def main() -> None:
    """Main function to run the bot"""
    logger.info("Starting Art Therapist Bot...")
    
    # Check if ML API is available
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(f"{ML_API_URL}/health") as response:
                if response.status == 200:
                    logger.info("ML API is available")
                else:
                    logger.warning("ML API is not responding properly")
    except Exception as e:
        logger.error(f"Cannot connect to ML API: {e}")
        logger.warning("Bot will continue without ML API (limited functionality)")
    
    # Start polling
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

